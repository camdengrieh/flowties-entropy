/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  PackOpening,
  PackOpeningInterface,
} from "../../contracts/PackOpening";

const _abi = [
  {
    inputs: [],
    name: "EmptyItemArray",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "item",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "RandomItemSelected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "randomNumber",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "min",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "max",
        type: "uint64",
      },
    ],
    name: "RandomNumberGenerated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "randomResult",
        type: "uint64",
      },
    ],
    name: "RandomnessFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "flowHeight",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "evmHeight",
        type: "uint256",
      },
    ],
    name: "RandomnessRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "flowHeight",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "evmHeight",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "randomSource",
        type: "bytes32",
      },
    ],
    name: "RandomnessSourced",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "canFulfillRequest",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "min",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "max",
        type: "uint64",
      },
    ],
    name: "getRandomNumber",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "items",
        type: "string[]",
      },
    ],
    name: "selectRandomItem",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506115678061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806312fc224914610046578063d59fd63c14610076578063df5a9fa8146100a6575b600080fd5b610060600480360381019061005b9190610b8f565b6100d6565b60405161006d9190610c6c565b60405180910390f35b610090600480360381019061008b9190610cc4565b6101ae565b60405161009d9190610d0c565b60405180910390f35b6100c060048036038101906100bb9190610d67565b61025c565b6040516100cd9190610db6565b60405180910390f35b606060008383905003610115576040517fde24d3fa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610131600060018686905061012c9190610e00565b61025c565b905083838267ffffffffffffffff168181106101505761014f610e34565b5b90506020028101906101629190610e72565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091505092915050565b6000806001836101be9190610e00565b905060008054905081106101d6576000915050610257565b60008082815481106101eb576101ea610e34565b5b906000526020600020906003020190506000610205610270565b90508160020160009054906101000a900460ff1615801561025157508067ffffffffffffffff168260000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff16105b93505050505b919050565b600061026883836103cb565b905092915050565b60008060006801000000000000000173ffffffffffffffffffffffffffffffffffffffff166040516024016040516020818303038152906040527f53e87d66000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516103259190610f1c565b600060405180830381855afa9150503d8060008114610360576040519150601f19603f3d011682016040523d82523d6000602084013e610365565b606091505b5091509150816103aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a190610fcb565b60405180910390fd5b6000818060200190518101906103c09190611000565b905080935050505090565b6000806103d661044e565b6040516020016103e6919061104e565b604051602081830303815290604052905060004360405160200161040a919061104e565b6040516020818303038152906040529050610423610af2565b6104388383836104ba9092919063ffffffff16565b6104438187876105d3565b935050505092915050565b600080610459610712565b67ffffffffffffffff169050604061046f610712565b67ffffffffffffffff16901b811790506080610489610712565b67ffffffffffffffff16901b8117905060c06104a3610712565b67ffffffffffffffff16901b811790508091505090565b6010825110156104ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f690611101565b60405180910390fd5b60008282604051602001610514929190611121565b604051602081830303815290604052905060008180519060200120905061055b816040516020016105459190611170565b604051602081830303815290604052600061086d565b856000019067ffffffffffffffff16908167ffffffffffffffff16815250506105a48160405160200161058e9190611170565b604051602081830303815290604052600861086d565b856020019067ffffffffffffffff16908167ffffffffffffffff16815250506105cc85610925565b5050505050565b60008267ffffffffffffffff168267ffffffffffffffff161161062b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610622906111d7565b60405180910390fd5b6000838361063991906111f7565b9050600061064682610994565b9050600060018267ffffffffffffffff166001901b6106659190610e00565b90506000826101006106779190611262565b67ffffffffffffffff16905060008060006106918b6109dc565b90505b6001156106f65784811691508667ffffffffffffffff168267ffffffffffffffff1611156106f6578567ffffffffffffffff1681901c905082806106d790611293565b9350508383036106f1576106ea8b6109dc565b9050600092505b610694565b818a61070291906112db565b9750505050505050509392505050565b60008060006801000000000000000173ffffffffffffffffffffffffffffffffffffffff166040516024016040516020818303038152906040527f705fab20000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516107c79190610f1c565b600060405180830381855afa9150503d8060008114610802576040519150601f19603f3d011682016040523d82523d6000602084013e610807565b606091505b50915091508161084c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610843906113af565b60405180910390fd5b6000818060200190518101906108629190611000565b905080935050505090565b600060088261087c91906113cf565b835110156108bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b69061144f565b60405180910390fd5b6000805b600881101561091a578481856108d991906113cf565b815181106108ea576108e9610e34565b5b602001015160f81c60f81b60f81c60ff1660088367ffffffffffffffff16901b17915080806001019150506108c3565b508091505092915050565b6000816000015167ffffffffffffffff1614158061095257506000816020015167ffffffffffffffff1614155b610991576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610988906114e1565b60405180910390fd5b50565b600080600090505b60008367ffffffffffffffff1611156109d35760018367ffffffffffffffff16901c925080806109cb90611501565b91505061099c565b80915050919050565b6000806109e883610a4e565b67ffffffffffffffff16905060406109ff84610a4e565b67ffffffffffffffff16901b811790506080610a1a84610a4e565b67ffffffffffffffff16901b8117905060c0610a3584610a4e565b67ffffffffffffffff16901b8117905080915050919050565b6000610a5982610925565b60008260000151905060008360200151905080846000019067ffffffffffffffff16908167ffffffffffffffff168152505060178267ffffffffffffffff16901b8218915060118267ffffffffffffffff16901c82189150601a8167ffffffffffffffff16901c81188218915081846020019067ffffffffffffffff16908167ffffffffffffffff168152505080820192505050919050565b6040518060400160405280600067ffffffffffffffff168152602001600067ffffffffffffffff1681525090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f840112610b4f57610b4e610b2a565b5b8235905067ffffffffffffffff811115610b6c57610b6b610b2f565b5b602083019150836020820283011115610b8857610b87610b34565b5b9250929050565b60008060208385031215610ba657610ba5610b20565b5b600083013567ffffffffffffffff811115610bc457610bc3610b25565b5b610bd085828601610b39565b92509250509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c16578082015181840152602081019050610bfb565b60008484015250505050565b6000601f19601f8301169050919050565b6000610c3e82610bdc565b610c488185610be7565b9350610c58818560208601610bf8565b610c6181610c22565b840191505092915050565b60006020820190508181036000830152610c868184610c33565b905092915050565b6000819050919050565b610ca181610c8e565b8114610cac57600080fd5b50565b600081359050610cbe81610c98565b92915050565b600060208284031215610cda57610cd9610b20565b5b6000610ce884828501610caf565b91505092915050565b60008115159050919050565b610d0681610cf1565b82525050565b6000602082019050610d216000830184610cfd565b92915050565b600067ffffffffffffffff82169050919050565b610d4481610d27565b8114610d4f57600080fd5b50565b600081359050610d6181610d3b565b92915050565b60008060408385031215610d7e57610d7d610b20565b5b6000610d8c85828601610d52565b9250506020610d9d85828601610d52565b9150509250929050565b610db081610d27565b82525050565b6000602082019050610dcb6000830184610da7565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e0b82610c8e565b9150610e1683610c8e565b9250828203905081811115610e2e57610e2d610dd1565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112610e8f57610e8e610e63565b5b80840192508235915067ffffffffffffffff821115610eb157610eb0610e68565b5b602083019250600182023603831315610ecd57610ecc610e6d565b5b509250929050565b600081519050919050565b600081905092915050565b6000610ef682610ed5565b610f008185610ee0565b9350610f10818560208601610bf8565b80840191505092915050565b6000610f288284610eeb565b915081905092915050565b7f556e7375636365737366756c2063616c6c20746f20436164656e63652041726360008201527f68207072652d636f6d70696c65207768656e206665746368696e6720466c6f7760208201527f20626c6f636b2068656967687400000000000000000000000000000000000000604082015250565b6000610fb5604d83610be7565b9150610fc082610f33565b606082019050919050565b60006020820190508181036000830152610fe481610fa8565b9050919050565b600081519050610ffa81610d3b565b92915050565b60006020828403121561101657611015610b20565b5b600061102484828501610feb565b91505092915050565b6000819050919050565b61104861104382610c8e565b61102d565b82525050565b600061105a8284611037565b60208201915081905092915050565b7f4174206c65617374203136206279746573206f6620656e74726f70792073686f60008201527f756c642062652075736564207768656e20696e697469616c697a696e6720746860208201527f6520505247000000000000000000000000000000000000000000000000000000604082015250565b60006110eb604583610be7565b91506110f682611069565b606082019050919050565b6000602082019050818103600083015261111a816110de565b9050919050565b600061112d8285610eeb565b91506111398284610eeb565b91508190509392505050565b6000819050919050565b6000819050919050565b61116a61116582611145565b61114f565b82525050565b600061117c8284611159565b60208201915081905092915050565b7f4d6178206d7573742062652067726561746572207468616e206d696e00000000600082015250565b60006111c1601c83610be7565b91506111cc8261118b565b602082019050919050565b600060208201905081810360008301526111f0816111b4565b9050919050565b600061120282610d27565b915061120d83610d27565b9250828203905067ffffffffffffffff81111561122d5761122c610dd1565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061126d82610d27565b915061127883610d27565b92508261128857611287611233565b5b828204905092915050565b600061129e82610c8e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036112d0576112cf610dd1565b5b600182019050919050565b60006112e682610d27565b91506112f183610d27565b9250828201905067ffffffffffffffff81111561131157611310610dd1565b5b92915050565b7f556e7375636365737366756c2063616c6c20746f20436164656e63652041726360008201527f68207072652d636f6d70696c65207768656e206665746368696e67207265766560208201527f727469626c652072616e646f6d206e756d626572000000000000000000000000604082015250565b6000611399605483610be7565b91506113a482611317565b606082019050919050565b600060208201905081810360008301526113c88161138c565b9050919050565b60006113da82610c8e565b91506113e583610c8e565b92508282019050808211156113fd576113fc610dd1565b5b92915050565b7f496e76616c69642062797465206c656e67746800000000000000000000000000600082015250565b6000611439601383610be7565b915061144482611403565b602082019050919050565b600060208201905081810360008301526114688161142c565b9050919050565b7f50524720696e697469616c2073746174652069732030202d206d75737420626560008201527f20696e697469616c697a6564206173206e6f6e2d7a65726f0000000000000000602082015250565b60006114cb603883610be7565b91506114d68261146f565b604082019050919050565b600060208201905081810360008301526114fa816114be565b9050919050565b600061150c82610d27565b915067ffffffffffffffff820361152657611525610dd1565b5b60018201905091905056fea2646970667358221220e0b115d86c85c1802bf5ef66e08a1edd02ffc0c678776c1e8ae1c72c98eebf0564736f6c634300081c0033";

type PackOpeningConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PackOpeningConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PackOpening__factory extends ContractFactory {
  constructor(...args: PackOpeningConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PackOpening & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PackOpening__factory {
    return super.connect(runner) as PackOpening__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PackOpeningInterface {
    return new Interface(_abi) as PackOpeningInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PackOpening {
    return new Contract(address, _abi, runner) as unknown as PackOpening;
  }
}
